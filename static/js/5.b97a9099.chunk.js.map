{"version":3,"sources":["components/PromptLogin/PromptLogin.module.scss","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","components/PromptLogin/PromptLogin.js","containers/LoginConteiner.js"],"names":["module","exports","_slicedToArray","arr","i","Array","isArray","Symbol","iterator","Object","_arr","_n","_d","_e","undefined","_s","_i","next","done","push","value","length","err","unsupportedIterableToArray","TypeError","props","Form","className","s","action","onSubmit","handlerSubmit","htmlFor","type","id","placeholder","pattern","onChange","handlerChange","login","minLength","maxLength","pass","message","Login","useState","setLogin","setPass","formMsg","setFormMsg","loggedIn","to","PromptLogin","e","target","preventDefault","handlerLogin","messages","emptyFieldForm","user","success","connect","store","dispatch"],"mappings":"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","file":"static/js/5.b97a9099.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"formWrap\":\"PromptLogin_formWrap__-z7o9\",\"l1\":\"PromptLogin_l1__3pkJr\",\"i1\":\"PromptLogin_i1__EJOge\",\"l2\":\"PromptLogin_l2__2Brse\",\"i2\":\"PromptLogin_i2__E-F3g\",\"submit\":\"PromptLogin_submit__2Fldu\",\"btn\":\"PromptLogin_btn__2U84g\",\"failure\":\"PromptLogin_failure__1QIzn\",\"loading\":\"PromptLogin_loading__31uPC\",\"wrap\":\"PromptLogin_wrap__1l1p4\"};","import arrayWithHoles from \"./arrayWithHoles\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray\";\nimport nonIterableRest from \"./nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import React from 'react';\r\nimport * as s from './PromptLogin.module.scss'\r\nimport { LoadingThin } from '../LoadingComponent/LoadingComponent'\r\n\r\nexport default function (props) {\r\n  let Form = (\r\n    <div className={s.formWrap}>\r\n      <h1>Login</h1>\r\n      <form action=\"\" onSubmit={props.handlerSubmit}>\r\n        <label\r\n          className={s.l1}\r\n          htmlFor=\"login\">Login</label>\r\n        <input\r\n          className={s.i1}\r\n          type=\"text\"\r\n          id=\"login\"\r\n          placeholder=\"Login@example.com\"\r\n          pattern=\".+@.+\\..+\"\r\n          onChange={props.handlerChange}\r\n          value={props.login}\r\n        />\r\n        <label\r\n          className={s.l2}\r\n          htmlFor=\"password\">Password</label>\r\n        <input\r\n          className={s.i2}\r\n          type=\"password\"\r\n          id=\"password\"\r\n          minLength=\"4\"\r\n          maxLength=\"16\"\r\n          placeholder=\"Password\"\r\n          onChange={props.handlerChange}\r\n          value={props.pass}\r\n        />\r\n        <div className={s.submit}>\r\n          <button\r\n            className={s.btn}\r\n            type='submit'\r\n          >Login</button>\r\n        </div>\r\n      </form>\r\n\r\n    </div>\r\n  )\r\n  let tmp;\r\n\r\n  if (props.message) {\r\n    tmp = (\r\n      <div className={s.wrap}>\r\n        {props.message === 'Loading...' ?\r\n          <div className={s.loading}><LoadingThin /></div> :\r\n          <h2 className={s.failure}>{props.message}</h2>}\r\n        {Form}\r\n      </div>\r\n    )\r\n  } else {\r\n    tmp = <div>{Form}</div>;\r\n  }\r\n\r\n  return tmp\r\n}","import React, { useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { handlerLogin } from '../actions/UserAction';\r\nimport PromptLogin from '../components/PromptLogin/PromptLogin'\r\nimport { Redirect } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { messages } from '../utils/messages'\r\n\r\n\r\nexport function Login(props) {\r\n\r\n  const [login, setLogin] = useState('');\r\n  const [pass, setPass] = useState('');\r\n  const [formMsg, setFormMsg] = useState('')\r\n\r\n  function handlerSubmit(e) {\r\n    e.preventDefault();\r\n\r\n    if (!login || !pass) {\r\n      setFormMsg(messages.emptyFieldForm)\r\n\r\n    } else {\r\n      props.handlerLogin(login, pass);\r\n      setPass('');\r\n      setFormMsg('')\r\n    }\r\n  }\r\n\r\n  function handlerChange(e) {\r\n\r\n    if (e.target.id === 'login') {\r\n      setLogin(e.target.value)\r\n\r\n    } else if (e.target.id === 'password') {\r\n      setPass(e.target.value)\r\n    }\r\n  }\r\n\r\n\r\n  return (\r\n    <>\r\n      {props.loggedIn ? <Redirect to='/profile' /> : <PromptLogin\r\n        handlerChange={handlerChange}\r\n        handlerSubmit={handlerSubmit}\r\n        user={props.user}\r\n        message={props.message + formMsg}\r\n        success={props.success}\r\n        login={login}\r\n        pass={pass} />}\r\n    </>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = store => {\r\n  return {\r\n    user: store.user.login,\r\n    message: store.user.message,\r\n    success: store.user.success,\r\n    loggedIn: store.user.loggedIn,\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    handlerLogin: (login, pass) => dispatch(handlerLogin(login, pass))\r\n  }\r\n}\r\n\r\nLogin.propTypes = {\r\n  user: PropTypes.string.isRequired,\r\n  message: PropTypes.string.isRequired,\r\n  success: PropTypes.bool.isRequired,\r\n  loggedIn: PropTypes.bool.isRequired,\r\n  handlerLogin: PropTypes.func.isRequired\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Login)\r\n\r\n"],"sourceRoot":""}