{"version":3,"sources":["components/News/News.js","containers/NewsContainer.js"],"names":["News","props","data","className","map","i","key","id","title","text","length","NewsContainer","handlerRequest","useEffect","isFetching","message","tmp","connect","store","news","dispatch","handlerNewsRequest"],"mappings":"wOAGe,SAASA,EAAKC,GAAQ,IAC7BC,EAASD,EAATC,KACN,OACE,yBAAKC,UAAU,QACZD,EAAKE,KAAI,SAAAC,GACR,OACE,yBACEC,IAAKD,EAAEE,GACPJ,UAAU,YACV,4BAAKE,EAAEG,OACP,2BAAIH,EAAEI,UAIZ,4BAAQN,UAAU,cAAlB,oFAAgDD,EAAKQ,SCRpD,SAASC,EAAcV,GAAQ,IAC9BW,EAAmBX,EAAnBW,eAENC,qBAAU,WACRD,MACC,CAACA,IAiBJ,OAAO,6BAfK,WAAO,IAEXV,EAA8BD,EAA9BC,KAAMY,EAAwBb,EAAxBa,WAAYC,EAAYd,EAAZc,QAExB,OAAID,EACK,kBAAC,IAAD,MAEEC,EACF,4BAAKA,GAEHb,EAAKQ,OACP,kBAACV,EAAD,CAAME,KAAMA,SADd,EAKIc,IAoBAC,uBAVS,SAAAC,GAAK,MAAK,CAChChB,KAAMgB,EAAMC,KAAKjB,KACjBY,WAAYI,EAAMC,KAAKL,WACvBC,QAASG,EAAMC,KAAKJ,YAGK,SAAAK,GAAQ,MAAK,CACtCR,eAAgB,kBAAMQ,EAASC,mBAGlBJ,CAA6CN","file":"static/js/7.06ca93e9.chunk.js","sourcesContent":["import React from 'react'\r\n\r\n\r\nexport default function News(props) {\r\n  let { data } = props\r\n  return (\r\n    <div className=\"anim\">\r\n      {data.map(i => {\r\n        return (\r\n          <div\r\n            key={i.id}\r\n            className=\"newsItem\">\r\n            <h2>{i.title}</h2>\r\n            <p>{i.text}</p>\r\n          </div>\r\n        )\r\n      })}\r\n      <strong className=\"count-news\">Всего новостей: {data.length}</strong>\r\n    </div>\r\n  )\r\n}","import React, { useEffect } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { connect } from 'react-redux';\r\nimport { handlerNewsRequest } from '../actions/NewsAction';\r\n\r\nimport { Loading } from '../components/LoadingComponent/LoadingComponent'\r\n\r\nimport News from '../components/News/News';\r\n\r\nexport function NewsContainer(props) {\r\n  let { handlerRequest } = props\r\n\r\n  useEffect(() => {\r\n    handlerRequest()\r\n  }, [handlerRequest])\r\n\r\n  const tmp = () => {\r\n\r\n    let { data, isFetching, message } = props\r\n\r\n    if (isFetching) {\r\n      return <Loading />\r\n\r\n    } else if (message) {\r\n      return <h2>{message}</h2>\r\n\r\n    } else if (data.length) {\r\n      return <News data={data} />\r\n    }\r\n  }\r\n\r\n  return <div>{tmp()}</div>\r\n}\r\n\r\nNewsContainer.propTypes = {\r\n  data: PropTypes.array.isRequired,\r\n  message: PropTypes.string.isRequired,\r\n  isFetching: PropTypes.bool.isRequired,\r\n  handlerRequest: PropTypes.func.isRequired,\r\n}\r\n\r\nconst mapStateToProps = store => ({\r\n  data: store.news.data,\r\n  isFetching: store.news.isFetching,\r\n  message: store.news.message,\r\n})\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  handlerRequest: () => dispatch(handlerNewsRequest()),\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(NewsContainer)"],"sourceRoot":""}